@page "/orders/{orderId:int}"
@inject IOrderService _orderService

@if (order is null)
{
    <span>Loading order...</span>
}
else
{
    <h2>Order from @order.OrderDate</h2>

    <div>
        @foreach (var product in order.Products)
        {
            <div class="container">
                <div class="image-wrapper">
                    <img src="@product.ImageUrl" class="image"/>
                </div>
                <div class="name">
                    <h4><a href="/product/@product.ProductId">@product.Title</a></h4>
                    <span>@product.ProductType</span>
                    <br/>
                    <span>Quantity: @product.Quantity</span>
                </div>
                <div class="product-price">@product.TotalPrice@_currency</div>
            </div>
            <hr/>
        }
        <div class="product-price">
            Total: @order.TotalPrice@_currency
        </div>
    </div>

}

@code {
    string _currency = "kr";
    [Parameter]
    public int OrderId { get; set; }

    OrderDetailsResponseDTO order = null;

    protected override async Task OnInitializedAsync()
    {
        order = await _orderService.GetOrderDetails(OrderId);
    }

}
