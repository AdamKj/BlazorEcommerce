@page "/register"
@inject IAuthService _authService

<PageTitle>Register</PageTitle>

<h3 class="m-4">Register</h3>

<EditForm Model="@_user" OnValidSubmit="HandleRegistration">
    <DataAnnotationsValidator/>
    <div class="m-4">
        <label for="email">Email</label>
        <InputText id="email" @bind-Value="_user.Email" class="form-control"/>
        <ValidationMessage For="@(() => _user.Email)"/>
    </div>
    <div class="m-4">
        <label for="password">Password</label>
        <InputText id="password" @bind-Value="_user.Password" class="form-control" type="password"/>
        <ValidationMessage For="@(() => _user.Password)"/>
    </div>
    <div class="m-4">
        <label for="confirm-password">Confirm Password</label>
        <InputText id="confirm-password" @bind-Value="_user.ConfirmPassword" class="form-control" type="password"/>
        <ValidationMessage For="@(() => _user.ConfirmPassword)"/>
    </div>
    <button class="btn btn-primary m-4" type="submit">Register</button>
    <div class="@_messageCssClass m-4">
        <span>@_message</span>
    </div>
</EditForm>

@code {
    UserRegister _user = new();
    string _message = string.Empty;
    string _messageCssClass = string.Empty;

    async Task HandleRegistration()
    {
        var result = await _authService.Register(_user);
        _message = result.Message;
        _messageCssClass = !result.Success ? "text-danger" : "text-success";
    }
}
