@page "/admin/product-types"
@inject IProductTypeService _productTypeService
@implements IDisposable
@attribute [Authorize(Roles = "Admin")]

<h3 class="m-4">ProductTypes</h3>

@foreach (var productType in _productTypeService.ProductTypes)
{
    @if (productType.Editing)
    {
        <EditForm Model="_editingProductType" OnSubmit="UpdateProductType">
            <div class="row ms-4">
                <div class="col">
                    <InputText @bind-Value="_editingProductType.Name" class="form-control"></InputText>
                </div>
                <div class="col">
                    <button type="submit" class="btn btn-primary">
                        <i class="oi oi-cloud-upload"></i>
                    </button>
                </div>
            </div>
        </EditForm>
    }
    else
    {
        <div class="row ms-4">
            <div class="col">
                @productType.Name
            </div>
            <div class="col">
                <button class="btn btn-secondary" @onclick="() => EditProductType(productType)">
                    <i class="oi oi-pencil"></i>
                </button>
            </div>
        </div>
        <hr/>
    }
}
<button class="btn btn-primary ms-4" @onclick="CreateNewProductType">
    <i class="oi oi-plus"></i> Add new Product Type
</button>

@code {
    ProductType _editingProductType = null;

    protected override async Task OnInitializedAsync()
    {
        await _productTypeService.GetProductTypes();
        _productTypeService.Onchange += StateHasChanged;
    }

    public void Dispose()
    {
        _productTypeService.Onchange -= StateHasChanged;
    }

    private void EditProductType(ProductType productType)
    {
        productType.Editing = true;
        _editingProductType = productType;
    }

    private void CreateNewProductType()
    {
        _editingProductType = _productTypeService.CreateNewProductType();
    }

    private async Task UpdateProductType()
    {
        if (_editingProductType.IsNew)
            await _productTypeService.AddProductType(_editingProductType);
        else
            await _productTypeService.UpdateProductType(_editingProductType);
        _editingProductType = new ProductType();
    }
}
