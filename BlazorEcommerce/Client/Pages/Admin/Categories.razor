@page "/admin/categories"
@inject ICategoryService _categoryService
@attribute [Authorize(Roles = "Admin")]
@implements IDisposable 

<h3 class="m-4">Categories</h3>

<div class="header m-4">
    <div class="col">Name</div>
    <div class="col">Url</div>
    <div class="col">Visible</div>
    <div class="col"></div>
</div>

@foreach (var category in _categoryService.AdminCategories)
{
    @if (category.Editing)
    {
        <EditForm Model="_editingCategory" OnSubmit="UpdateCategory">
            <div class="row m-4">
                <div class="col">
                    <InputText @bind-Value="_editingCategory.Name" class="form-control"></InputText>
                </div>
                <div class="col">
                    <InputText @bind-Value="_editingCategory.Url" class="form-control"></InputText>
                </div>
                <div class="col col-visible">
                    <InputCheckbox @bind-Value="_editingCategory.Visible" style="transform: scale(1.5,1.5)"></InputCheckbox>
                </div>
                <div class="col">
                    <button type="submit" class="btn btn-primary">
                        <i class="oi oi-cloud-upload"></i>
                    </button>
                    <button class="btn btn-danger" @onclick="CancelEditing">
                        <i class="oi oi-circle-x"></i>
                    </button>
                </div>
            </div>
            <hr/>
        </EditForm>
    }
    else
    {
        <div class="row m-4">
            <div class="col">
                @category.Name
            </div>
            <div class="col">
                @category.Url
            </div>
            <div class="col col-visible">
                <span>@(category.Visible ? "✔" : "")</span>
            </div>
            <div class="col">
                <button class="btn btn-primary" @onclick="() => EditCategory(category)">
                    <i class="oi oi-pencil"></i>
                </button>
                <button class="btn btn-danger" @onclick="() => DeleteCategory(category.Id)">
                    <i class="oi oi-trash"></i>
                </button>
            </div>
        </div>
        <hr/>
    }
}
<button class="btn btn-primary m-4" @onclick="CreateNewCategory">
    <i class="oi oi-plus"></i>Add new Category
</button>

@code {
    Category _editingCategory = null;

    protected override async Task OnInitializedAsync()
    {
        await _categoryService.GetAdminCategories();
        _categoryService.OnChange += StateHasChanged;
    }

    public void Dispose()
    {
        _categoryService.OnChange -= StateHasChanged;
    }

    private void CreateNewCategory()
    {
        _editingCategory = _categoryService.CreateNewCategory();
    }

    private void EditCategory(Category category)
    {
        category.Editing = true;
        _editingCategory = category;
    }

    private async Task UpdateCategory()
    {
        if (_editingCategory.IsNew)
            await _categoryService.AddCategory(_editingCategory);
        else
            await _categoryService.UpdateCategory(_editingCategory);

        _editingCategory = new Category();
    }

    private async Task CancelEditing()
    {
        _editingCategory = new Category();
        await _categoryService.GetAdminCategories();
    }

    private async Task DeleteCategory(int id)
    {
        await _categoryService.DeleteCategory(id);
    }
}
